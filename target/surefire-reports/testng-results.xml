<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="3" passed="2">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="36641" started-at="2019-12-26T07:38:43Z" finished-at="2019-12-26T07:39:19Z">
    <groups>
    </groups>
    <test name="Test" duration-ms="36641" started-at="2019-12-26T07:38:43Z" finished-at="2019-12-26T07:39:19Z">
      <class name="Academy.assertstest">
        <test-method status="PASS" signature="startup()[pri:0, instance:Academy.assertstest@21b2e768]" name="startup" is-config="true" duration-ms="5762" started-at="2019-12-26T07:38:43Z" finished-at="2019-12-26T07:38:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startup -->
        <test-method status="PASS" signature="startup()[pri:0, instance:Academy.firstTest@57250572]" name="startup" is-config="true" duration-ms="13" started-at="2019-12-26T07:38:48Z" finished-at="2019-12-26T07:38:48Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- startup -->
        <test-method status="FAIL" signature="basis2()[pri:0, instance:Academy.assertstest@21b2e768]" name="basis2" duration-ms="1258" started-at="2019-12-26T07:38:49Z" finished-at="2019-12-26T07:38:50Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [Infor Expense Management12] but found [Infor Expense Management]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [Infor Expense Management12] but found [Infor Expense Management]
at org.testng.Assert.fail(Assert.java:96)
at org.testng.Assert.failNotEquals(Assert.java:776)
at org.testng.Assert.assertEqualsImpl(Assert.java:137)
at org.testng.Assert.assertEquals(Assert.java:118)
at org.testng.Assert.assertEquals(Assert.java:453)
at org.testng.Assert.assertEquals(Assert.java:463)
at Academy.assertstest.basis2(assertstest.java:25)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:498)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:283)
at org.apache.maven.surefire.testng.TestNGXmlTestSuite.execute(TestNGXmlTestSuite.java:75)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:120)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:377)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:138)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:465)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:451)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basis2 -->
        <test-method status="PASS" signature="teardoen()[pri:0, instance:Academy.assertstest@21b2e768]" name="teardoen" is-config="true" duration-ms="593" started-at="2019-12-26T07:38:50Z" finished-at="2019-12-26T07:38:51Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardoen -->
      </class> <!-- Academy.assertstest -->
      <class name="Academy.firstTest">
        <test-method status="PASS" signature="basis1(java.lang.String, java.lang.String)[pri:0, instance:Academy.firstTest@57250572]" name="basis1" duration-ms="14320" started-at="2019-12-26T07:38:51Z" data-provider="getData" finished-at="2019-12-26T07:39:05Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[jsmith]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basis1 -->
        <test-method status="PASS" signature="basis1(java.lang.String, java.lang.String)[pri:0, instance:Academy.firstTest@57250572]" name="basis1" duration-ms="11933" started-at="2019-12-26T07:39:05Z" data-provider="getData" finished-at="2019-12-26T07:39:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[jjones]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[p]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basis1 -->
        <test-method status="PASS" signature="teardoen()[pri:0, instance:Academy.firstTest@57250572]" name="teardoen" is-config="true" duration-ms="2103" started-at="2019-12-26T07:39:17Z" finished-at="2019-12-26T07:39:19Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardoen -->
      </class> <!-- Academy.firstTest -->
    </test> <!-- Test -->
  </suite> <!-- Suite -->
</testng-results>
